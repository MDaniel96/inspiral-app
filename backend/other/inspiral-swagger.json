{
  "swagger": "2.0",
  "info": {
    "description": "This is a server of InSpiral webpage.",
    "version": "1.0.0",
    "title": "InSpiral App",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "morvai.daniel96@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "todo.swagger.io",
  "basePath": "/v2",
  "tags": [
    {
      "name": "trainer",
      "description": "Trainer routes"
    },
    {
      "name": "entry",
      "description": "Entry routes"
    },
    {
      "name": "training",
      "description": "Training routes"
    },
    {
      "name": "poll",
      "description": "Poll routes"
    },
    {
      "name": "global",
      "description": "Global functions' routes"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/trainer/login": {
      "post": {
        "tags": [
          "trainer"
        ],
        "summary": "Log in trainer",
        "description": "",
        "operationId": "addTrainer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Trainer's email to login",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Login OK",
            "schema": {
              "type": "string"
            },
            "headers": {
              "JWT token": {
                "type": "string",
                "description": "token of trainer returned"
              }
            }
          },
          "400": {
            "description": "Invalid email/password supplied"
          }
        }
      }
    },
    "/admin/trainer/logout": {
      "post": {
        "tags": [
          "trainer"
        ],
        "summary": "Log out trainer",
        "description": "",
        "operationId": "logoutTrainer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/admin/trainer": {
      "get": {
        "tags": [
          "trainer"
        ],
        "summary": "Gets logged in trainer",
        "description": "",
        "operationId": "getTrainer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Trainer"
            }
          },
          "404": {
            "description": "Trainer not found"
          }
        }
      },
      "put": {
        "tags": [
          "trainer"
        ],
        "summary": "Update trainer",
        "description": "",
        "operationId": "editTrainer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Trainer to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Trainer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update OK"
          },
          "404": {
            "description": "Trainer not found"
          }
        }
      }
    },
    "/admin/poll": {
      "post": {
        "tags": [
          "poll"
        ],
        "summary": "Add a new poll",
        "description": "",
        "operationId": "addPoll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Poll to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Poll"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Poll created"
          }
        }
      },
      "get": {
        "tags": [
          "poll"
        ],
        "summary": "Get trainer's polls",
        "description": "",
        "operationId": "getTrainerPoll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Poll"
              }
            }
          }
        }
      }
    },
    "/admin/poll/{pollId}": {
      "put": {
        "tags": [
          "poll"
        ],
        "summary": "Update trainer's poll",
        "description": "",
        "operationId": "updateTrainersPoll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "pollId",
            "in": "path",
            "description": "ID of poll to be updated",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Poll to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Poll"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update OK"
          },
          "404": {
            "description": "Poll not found"
          }
        }
      },
      "delete": {
        "tags": [
          "poll"
        ],
        "summary": "Delete trainer's poll (with questions)",
        "description": "",
        "operationId": "deleteTrainersPoll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "pollId",
            "in": "path",
            "description": "ID of poll to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete OK"
          },
          "404": {
            "description": "Poll not found"
          }
        }
      }
    },
    "/admin/poll/question/{questionId}": {
      "delete": {
        "tags": [
          "poll"
        ],
        "summary": "Delete question",
        "description": "",
        "operationId": "deletePollsQuestion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "questionId",
            "in": "path",
            "description": "ID of question to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete OK"
          },
          "404": {
            "description": "Question not found"
          }
        }
      }
    },
    "/admin/poll/{pollId}/question": {
      "post": {
        "tags": [
          "poll"
        ],
        "summary": "Add a new question to poll",
        "description": "",
        "operationId": "addQuestion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "pollId",
            "in": "path",
            "description": "ID of poll to be updated",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Question to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Question"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Question added"
          },
          "404": {
            "description": "Poll not found"
          }
        }
      }
    },
    "/poll/{pollId}/question": {
      "get": {
        "tags": [
          "poll"
        ],
        "summary": "Get poll's questions",
        "description": "",
        "operationId": "getPollQuestions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pollId",
            "in": "path",
            "description": "ID of poll to be queried",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Question"
              }
            }
          },
          "404": {
            "description": "Poll not found"
          }
        }
      }
    },
    "/poll/all": {
      "get": {
        "tags": [
          "poll"
        ],
        "summary": "Get all polls",
        "description": "",
        "operationId": "getAllPoll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Poll"
              }
            }
          }
        }
      }
    },
    "/poll/{pollId}/submit/{email}": {
      "post": {
        "tags": [
          "poll"
        ],
        "summary": "Submit poll",
        "description": "",
        "operationId": "submitPoll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pollId",
            "in": "path",
            "description": "ID of poll to be submitted",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "email",
            "in": "path",
            "description": "Email of submitter user",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Submitted questions",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "404": {
            "description": "Poll not found"
          }
        }
      }
    },
    "/admin/entry": {
      "post": {
        "tags": [
          "entry"
        ],
        "summary": "Add a new entry",
        "description": "",
        "operationId": "addEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Entry to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Entry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Entry created"
          }
        }
      },
      "get": {
        "tags": [
          "entry"
        ],
        "summary": "Get trainer's entries",
        "description": "",
        "operationId": "getTrainerEntries",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Entry"
              }
            }
          }
        }
      }
    },
    "/admin/entry/{entryId}": {
      "put": {
        "tags": [
          "entry"
        ],
        "summary": "Update trainer's entry",
        "description": "",
        "operationId": "updateTrainersEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "entryId",
            "in": "path",
            "description": "ID of entry to be updated",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Entry to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Entry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update OK"
          },
          "404": {
            "description": "Entry not found"
          }
        }
      },
      "delete": {
        "tags": [
          "entry"
        ],
        "summary": "Delete trainer's entry",
        "description": "",
        "operationId": "deleteTrainersEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "entryId",
            "in": "path",
            "description": "ID of entry to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete OK"
          },
          "404": {
            "description": "Entry not found"
          }
        }
      }
    },
    "/admin/entry/comment/{commentId}": {
      "delete": {
        "tags": [
          "entry"
        ],
        "summary": "Delete comment",
        "description": "",
        "operationId": "deleteComment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "ID of comment to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete OK"
          },
          "404": {
            "description": "Entry or comment not found"
          }
        }
      }
    },
    "/entry/{entryId}/comment": {
      "post": {
        "tags": [
          "entry"
        ],
        "summary": "Add a new comment to entry",
        "description": "",
        "operationId": "addComment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "entryId",
            "in": "path",
            "description": "ID of entry to be updated",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Comment to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Comment added"
          },
          "404": {
            "description": "Entry not found"
          }
        }
      },
      "get": {
        "tags": [
          "entry"
        ],
        "summary": "Get entry's comments",
        "description": "",
        "operationId": "getEntryComments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "entryId",
            "in": "path",
            "description": "ID of entry to be queried",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Comment"
              }
            }
          },
          "404": {
            "description": "Entry not found"
          }
        }
      }
    },
    "/entry/all": {
      "get": {
        "tags": [
          "entry"
        ],
        "summary": "Get all entries",
        "description": "",
        "operationId": "getAllEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Entry"
              }
            }
          }
        }
      }
    },
    "/entry/search/{keyword}": {
      "get": {
        "tags": [
          "entry"
        ],
        "summary": "Get entries by keyword",
        "description": "",
        "operationId": "getEntriesByKeyword",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "keyword",
            "in": "path",
            "description": "Keyword to search for",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Entry"
              }
            }
          }
        }
      }
    },
    "/admin/training": {
      "post": {
        "tags": [
          "training"
        ],
        "summary": "Add a new training",
        "description": "",
        "operationId": "addTraining",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Training to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Training"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Training created"
          }
        }
      },
      "get": {
        "tags": [
          "training"
        ],
        "summary": "Get trainer's trainings",
        "description": "",
        "operationId": "getTrainerTrainings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Training"
              }
            }
          }
        }
      }
    },
    "/admin/training/{trainingId}": {
      "put": {
        "tags": [
          "training"
        ],
        "summary": "Update trainer's training",
        "description": "",
        "operationId": "updateTrainersTraining",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "trainingId",
            "in": "path",
            "description": "ID of training to be updated",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Training to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Training"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update OK"
          },
          "404": {
            "description": "Training not found"
          }
        }
      },
      "delete": {
        "tags": [
          "training"
        ],
        "summary": "Delete trainer's training",
        "description": "",
        "operationId": "deleteTrainersTraining",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "trainingId",
            "in": "path",
            "description": "ID of training to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete OK"
          },
          "404": {
            "description": "Training not found"
          }
        }
      }
    },
    "/training/all": {
      "get": {
        "tags": [
          "training"
        ],
        "summary": "Get all trainings",
        "description": "",
        "operationId": "getAllTrainings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Training"
              }
            }
          }
        }
      }
    },
    "/training/{trainingId}/apply/{email}": {
      "post": {
        "tags": [
          "training"
        ],
        "summary": "Apply to a training",
        "description": "",
        "operationId": "applyTraining",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "trainingId",
            "in": "path",
            "description": "ID of training to be applied",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "email",
            "in": "path",
            "description": "Email of applier user",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "404": {
            "description": "Training not found"
          }
        }
      }
    },
    "/search/{keyword}": {
      "get": {
        "tags": [
          "global"
        ],
        "summary": "Seach by keyword",
        "description": "",
        "operationId": "searchByKeyword",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "keyword",
            "in": "path",
            "description": "Keyword to search for",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Trainer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "image": {
          "type": "string"
        }
      }
    },
    "Entry": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "trainerId": {
          "type": "integer",
          "format": "int64"
        },
        "trainerName": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "image": {
          "type": "string"
        }
      }
    },
    "Comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "entryId": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "date": {
          "type": "string"
        }
      }
    },
    "Poll": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "trainerId": {
          "type": "integer",
          "format": "int64"
        },
        "trainerName": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "date": {
          "type": "string"
        }
      }
    },
    "Question": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "pollId": {
          "type": "integer",
          "format": "int64"
        },
        "content": {
          "type": "string"
        }
      }
    },
    "Training": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "trainerId": {
          "type": "integer",
          "format": "int64"
        },
        "trainerName": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "date": {
          "type": "integer"
        },
        "lat": {
          "type": "number"
        },
        "lon": {
          "type": "number"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}